function (exports, require, __RuntyperAutogeneratedImport) {
    function textField(params) {
        void params;
        throw new Error("Not implemented");
    }
    exports.textField = textField;
    function dateField(params) {
        void params;
        throw new Error("Not implemented");
    }
    exports.dateField = dateField;
    exports.CarFields = {
        model: textField({ label: "Model of car" }),
        color: textField({ label: "Color of car" }),
        manufacturingDate: dateField({ label: "Date when car was manufactured" })
    };
    __RuntyperAutogeneratedImport.refTypes.set("/types/fields_and_dtos:Car", { type: "alias", body: { type: "reference", name: "/types/fields_and_dtos:DtoByFields", typeArguments: [{ type: "value_reference", name: "/types/fields_and_dtos:CarFields" }] } });
    __RuntyperAutogeneratedImport.refTypes.set("/types/fields_and_dtos:DtoByFields", { type: "alias", body: { type: "mapped_type", keyName: "P", keyType: { type: "keyof", target: { type: "generic_parameter", name: "T" } }, valueType: { type: "reference", name: "/types/fields_and_dtos:FieldType", typeArguments: [{ type: "index_access", index: { type: "generic_parameter", name: "P" }, object: { type: "generic_parameter", name: "T" } }] } }, typeParameters: [{ name: "T" }] });
    __RuntyperAutogeneratedImport.refTypes.set("/types/fields_and_dtos:FieldDefinition", { type: "interface", properties: { defaultValue: { type: "generic_parameter", name: "T" } }, typeParameters: [{ name: "T" }] });
    __RuntyperAutogeneratedImport.refTypes.set("/types/fields_and_dtos:FieldType", { type: "alias", body: { type: "conditional", checkType: { type: "generic_parameter", name: "F" }, extendsType: { type: "reference", name: "/types/fields_and_dtos:FieldDefinition", typeArguments: [{ type: "infer", name: "T" }] }, trueType: { type: "generic_parameter", name: "T" }, falseType: { type: "never" } }, typeParameters: [{ name: "F" }] });
    __RuntyperAutogeneratedImport.valueTypes.set("/types/fields_and_dtos:CarFields", { type: "object", properties: { model: { type: "reference", name: "/types/fields_and_dtos:FieldDefinition", typeArguments: [{ type: "string" }] }, color: { type: "reference", name: "/types/fields_and_dtos:FieldDefinition", typeArguments: [{ type: "string" }] }, manufacturingDate: { type: "reference", name: "/types/fields_and_dtos:FieldDefinition", typeArguments: [{ type: "number" }] } } });
    __RuntyperAutogeneratedImport.valueTypes.set("/types/fields_and_dtos:dateField", { type: "function", signatures: [{ type: "call_signature", parameters: [{ type: "parameter", name: "params", valueType: { type: "object", properties: { label: { type: "string" } } } }], returnType: { type: "reference", name: "/types/fields_and_dtos:FieldDefinition", typeArguments: [{ type: "number" }] }, hasImplementation: true }] });
    __RuntyperAutogeneratedImport.valueTypes.set("/types/fields_and_dtos:textField", { type: "function", signatures: [{ type: "call_signature", parameters: [{ type: "parameter", name: "params", valueType: { type: "object", properties: { label: { type: "string" } } } }], returnType: { type: "reference", name: "/types/fields_and_dtos:FieldDefinition", typeArguments: [{ type: "string" }] }, hasImplementation: true }] });
    typeof CarFields === "function" && __RuntyperAutogeneratedImport.functionsByName.set("/types/fields_and_dtos:CarFields", CarFields);
    typeof dateField === "function" && __RuntyperAutogeneratedImport.functionsByName.set("/types/fields_and_dtos:dateField", dateField);
    typeof textField === "function" && __RuntyperAutogeneratedImport.functionsByName.set("/types/fields_and_dtos:textField", textField);
}
