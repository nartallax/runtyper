function (exports, require, __RuntyperAutogeneratedImport) {
    __RuntyperAutogeneratedImport.Runtyper.internal.t([[
            "/types/recursive_type:Div",
            { type: "alias", body: { type: "object", properties: { child: { type: "union", types: [{ type: "type_reference", name: "/types/recursive_type:Div" }, { type: "type_reference", name: "/types/recursive_type:Img" }], optional: true }, text: { type: "string" } } } }
        ], [
            "/types/recursive_type:Div3",
            { type: "alias", body: { type: "object", properties: { child: { type: "mapped_type", keyName: "k", keyType: { type: "keyof", target: { type: "type_reference", name: "/types/recursive_type:Div3" } }, valueType: { type: "string" }, optional: true }, offset: { type: "number" } } } }
        ], [
            "/types/recursive_type:Div4",
            { type: "alias", body: { type: "object", properties: { next: { type: "type_reference", name: "/types/recursive_type:Img4" } } } }
        ], [
            "/types/recursive_type:Img",
            { type: "alias", body: { type: "object", properties: { child: { type: "union", types: [{ type: "type_reference", name: "/types/recursive_type:Div" }, { type: "type_reference", name: "/types/recursive_type:Img" }], optional: true }, src: { type: "string" } } } }
        ], [
            "/types/recursive_type:Img4",
            { type: "alias", body: { type: "object", properties: { next: { type: "type_reference", name: "/types/recursive_type:Div4" } } } }
        ], [
            "/types/recursive_type:LinkChain",
            { type: "alias", body: { type: "type_reference", name: "/types/recursive_type:LinkNodeOf", typeArguments: [{ type: "type_reference", name: "/types/recursive_type:LinkNodeOf", typeArguments: [{ type: "type_reference", name: "/types/recursive_type:LinkNodeOf", typeArguments: [{ type: "string" }] }] }] } }
        ], [
            "/types/recursive_type:LinkNodeOf",
            { type: "interface", properties: { next: { type: "generic_parameter", name: "ChildNode" } }, typeParameters: [{ name: "ChildNode" }] }
        ], [
            "/types/recursive_type:TreeNode",
            { type: "interface", properties: { value: { type: "generic_parameter", name: "T" }, left: { type: "type_reference", name: "/types/recursive_type:TreeNode", typeArguments: [{ type: "generic_parameter", name: "T" }], optional: true }, right: { type: "union", types: [{ type: "type_reference", name: "/types/recursive_type:TreeNode", typeArguments: [{ type: "generic_parameter", name: "T" }] }, { type: "constant", value: null }] } }, typeParameters: [{ name: "T" }] }
        ]]);
}
