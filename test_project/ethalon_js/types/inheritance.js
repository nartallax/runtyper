function (exports, require, __RuntyperAutogeneratedImport) {
    __RuntyperAutogeneratedImport.refTypes.set("/types/inheritance:A", { type: "interface", properties: { x: { type: "number" } } });
    __RuntyperAutogeneratedImport.refTypes.set("/types/inheritance:B", { type: "interface", properties: { y: { type: "number", optional: true } }, extends: [{ type: "reference", name: "/types/inheritance:A" }] });
    __RuntyperAutogeneratedImport.refTypes.set("/types/inheritance:C", { type: "interface", properties: { z: { type: "number" } }, extends: [{ type: "reference", name: "/types/inheritance:B" }] });
    __RuntyperAutogeneratedImport.refTypes.set("/types/inheritance:Name", { type: "interface", properties: { name: { type: "string" } }, index: { keyType: { type: "string" }, valueType: { type: "union", types: [{ type: "string" }, { type: "boolean" }] } } });
    __RuntyperAutogeneratedImport.refTypes.set("/types/inheritance:NameWithValue", { type: "interface", properties: { isNameWithValue: { type: "constant", value: true } }, extends: [{ type: "reference", name: "/types/inheritance:Name" }, { type: "reference", name: "/types/inheritance:Wrap", typeArguments: [{ type: "string" }] }] });
    __RuntyperAutogeneratedImport.refTypes.set("/types/inheritance:Wrap", { type: "alias", body: { type: "object", properties: { value: { type: "generic_parameter", name: "T" } } }, typeParameters: [{ name: "T" }] });
    __RuntyperAutogeneratedImport.refTypes.set("/types/inheritance:WrapWithName", { type: "interface", properties: { name: { type: "string" } }, extends: [{ type: "reference", name: "/types/inheritance:Wrap", typeArguments: [{ type: "generic_parameter", name: "T" }] }], typeParameters: [{ name: "T" }] });
    __RuntyperAutogeneratedImport.refTypes.set("/types/inheritance:WrappedNamedNumber", { type: "interface", properties: { isNumber: { type: "constant", value: true } }, extends: [{ type: "reference", name: "/types/inheritance:WrapWithName", typeArguments: [{ type: "number" }] }] });
}
