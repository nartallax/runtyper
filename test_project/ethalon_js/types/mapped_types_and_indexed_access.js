function (exports, require, __RuntyperAutogeneratedImport) {
    exports.constFromMappedTypeFile = { a: "" };
    __RuntyperAutogeneratedImport.Runtyper.internal.t([[
            "/types/mapped_types_and_indexed_access:A",
            { type: "alias", body: { type: "object", properties: { a: { type: "generic_parameter", name: "T" } } }, typeParameters: [{ name: "T" }] }
        ], [
            "/types/mapped_types_and_indexed_access:B",
            { type: "alias", body: { type: "object", properties: { b: { type: "generic_parameter", name: "T" } } }, typeParameters: [{ name: "T" }] }
        ], [
            "/types/mapped_types_and_indexed_access:C",
            { type: "alias", body: { type: "union", types: [{ type: "type_reference", name: "/types/mapped_types_and_indexed_access:A", typeArguments: [{ type: "number" }] }, { type: "type_reference", name: "/types/mapped_types_and_indexed_access:B", typeArguments: [{ type: "string" }] }] } }
        ], [
            "/types/mapped_types_and_indexed_access:MappedPoint",
            { type: "alias", body: { type: "mapped_type", keyName: "k", keyType: { type: "constant_union", value: ["x", "y"] }, valueType: { type: "number" } } }
        ], [
            "/types/mapped_types_and_indexed_access:MyRecordA",
            { type: "interface", properties: { x: { type: "number" } }, index: { keyType: { type: "string" }, valueType: { type: "number" } } }
        ], [
            "/types/mapped_types_and_indexed_access:MyRecordB",
            { type: "alias", body: { type: "object", properties: {}, index: { keyType: { type: "string" }, valueType: { type: "string" } } } }
        ], [
            "/types/mapped_types_and_indexed_access:MyRecordCopyA",
            { type: "alias", body: { type: "mapped_type", keyName: "k", keyType: { type: "keyof", target: { type: "type_reference", name: "/types/mapped_types_and_indexed_access:MyRecordA" } }, valueType: { type: "index_access", index: { type: "generic_parameter", name: "k" }, object: { type: "type_reference", name: "/types/mapped_types_and_indexed_access:MyRecordA" } } } }
        ], [
            "/types/mapped_types_and_indexed_access:MyRecordCopyB",
            { type: "alias", body: { type: "mapped_type", keyName: "k", keyType: { type: "keyof", target: { type: "type_reference", name: "/types/mapped_types_and_indexed_access:MyRecordB" } }, valueType: { type: "index_access", index: { type: "generic_parameter", name: "k" }, object: { type: "type_reference", name: "/types/mapped_types_and_indexed_access:MyRecordB" } } } }
        ], [
            "/types/mapped_types_and_indexed_access:MyRecordCopyBB",
            { type: "alias", body: { type: "mapped_type", keyName: "k", keyType: { type: "keyof", target: { type: "type_reference", name: "/types/mapped_types_and_indexed_access:MyRecordB" } }, valueType: { type: "boolean" } } }
        ], [
            "/types/mapped_types_and_indexed_access:OptCopiedPoint",
            { type: "alias", body: { type: "type_reference", name: "/types/mapped_types_and_indexed_access:OptionalCopy", typeArguments: [{ type: "type_reference", name: "/types/mapped_types_and_indexed_access:Point" }] } }
        ], [
            "/types/mapped_types_and_indexed_access:OptionalCopy",
            { type: "alias", body: { type: "mapped_type", keyName: "k", keyType: { type: "keyof", target: { type: "generic_parameter", name: "T" } }, valueType: { type: "index_access", index: { type: "generic_parameter", name: "k" }, object: { type: "generic_parameter", name: "T" } }, optional: true }, typeParameters: [{ name: "T" }] }
        ], [
            "/types/mapped_types_and_indexed_access:Point",
            { type: "interface", properties: { x: { type: "number" }, y: { type: "number" } } }
        ], [
            "/types/mapped_types_and_indexed_access:PointCopy",
            { type: "alias", body: { type: "mapped_type", keyName: "k", keyType: { type: "keyof", target: { type: "type_reference", name: "/types/mapped_types_and_indexed_access:Point" } }, valueType: { type: "index_access", index: { type: "generic_parameter", name: "k" }, object: { type: "type_reference", name: "/types/mapped_types_and_indexed_access:Point" } } } }
        ], [
            "/types/mapped_types_and_indexed_access:PointStupidCopy",
            { type: "alias", body: { type: "mapped_type", keyName: "k", keyType: { type: "keyof", target: { type: "type_reference", name: "/types/mapped_types_and_indexed_access:Point" } }, valueType: { type: "index_access", index: { type: "constant", value: "x" }, object: { type: "type_reference", name: "/types/mapped_types_and_indexed_access:Point" } } } }
        ], [
            "/types/mapped_types_and_indexed_access:PointWithOpt",
            { type: "interface", properties: { z: { type: "number", optional: true } } }
        ], [
            "/types/mapped_types_and_indexed_access:PointY",
            { type: "alias", body: { type: "index_access", index: { type: "constant", value: "y" }, object: { type: "type_reference", name: "/types/mapped_types_and_indexed_access:Point" } } }
        ], [
            "/types/mapped_types_and_indexed_access:ReadonlyCopy",
            { type: "alias", body: { type: "mapped_type", keyName: "k", keyType: { type: "keyof", target: { type: "generic_parameter", name: "T" } }, valueType: { type: "index_access", index: { type: "generic_parameter", name: "k" }, object: { type: "generic_parameter", name: "T" } } }, typeParameters: [{ name: "T" }] }
        ], [
            "/types/mapped_types_and_indexed_access:X",
            { type: "interface", properties: { z: { type: "object", properties: { i: { type: "object", properties: { j: { type: "mapped_type", keyName: "k", keyType: { type: "keyof", target: { type: "generic_parameter", name: "Y" } }, valueType: { type: "number" } } } } } } }, typeParameters: [{ name: "Y" }] }
        ], [
            "/types/mapped_types_and_indexed_access:XPoint",
            { type: "alias", body: { type: "type_reference", name: "/types/mapped_types_and_indexed_access:X", typeArguments: [{ type: "type_reference", name: "/types/mapped_types_and_indexed_access:Point" }] } }
        ], [
            "/types/mapped_types_and_indexed_access:XX",
            { type: "alias", body: { type: "mapped_type", keyName: "k", keyType: { type: "keyof", target: { type: "generic_parameter", name: "Y" } }, valueType: { type: "object", properties: { z: { type: "object", properties: { i: { type: "object", properties: { j: { type: "index_access", index: { type: "generic_parameter", name: "k" }, object: { type: "generic_parameter", name: "Y" } } } } } } } } }, typeParameters: [{ name: "Y" }] }
        ], [
            "/types/mapped_types_and_indexed_access:XXPoint",
            { type: "alias", body: { type: "type_reference", name: "/types/mapped_types_and_indexed_access:XX", typeArguments: [{ type: "type_reference", name: "/types/mapped_types_and_indexed_access:OptionalCopy", typeArguments: [{ type: "type_reference", name: "/types/mapped_types_and_indexed_access:Point" }] }] } }
        ], [
            "/types/mapped_types_and_indexed_access:ZOfPoint",
            { type: "alias", body: { type: "index_access", index: { type: "constant", value: "z" }, object: { type: "type_reference", name: "/types/mapped_types_and_indexed_access:PointWithOpt" } } }
        ]]);
    __RuntyperAutogeneratedImport.Runtyper.internal.v([[
            "/types/mapped_types_and_indexed_access:constFromMappedTypeFile",
            { type: "type_reference", name: "/types/mapped_types_and_indexed_access:A", typeArguments: [{ type: "string" }] }
        ]]);
    __RuntyperAutogeneratedImport.Runtyper.internal.f([[
            "/types/mapped_types_and_indexed_access:constFromMappedTypeFile",
            exports.constFromMappedTypeFile
        ]]);
}
