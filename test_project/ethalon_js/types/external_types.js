function (exports, require, __RuntyperAutogeneratedImport) {
    __RuntyperAutogeneratedImport.Runtyper.internal.t([[
            "/types/external_types:MyFn",
            { type: "alias", body: { type: "broken", file: "/types/external_types", node: "export type MyFn = NodeJS.CallSite", message: "Can only process index and property signatures, got something else instead: getThis(): unknown; (of kind MethodSignature)" } }
        ], [
            "/types/external_types:NamedZ",
            { type: "interface", properties: { name: { type: "string" } }, heritage: [{ type: "type_reference", name: "typescript/lib/lib.es5:Omit", typeArguments: [{ type: "type_reference", name: "/types/external_types:Point" }, { type: "constant", value: "y" }] }] }
        ], [
            "/types/external_types:Point",
            { type: "interface", properties: { x: { type: "number" }, y: { type: "number" }, z: { type: "number" } } }
        ], [
            "/types/external_types:SimpleType",
            { type: "alias", body: { type: "type_reference", name: "@nartallax/runtyper/runtyper:Runtyper.PrimitiveType" } }
        ], [
            "@nartallax/runtyper/runtyper:Runtyper.PrimitiveType",
            { type: "interface", properties: { type: { type: "constant_union", value: ["any", "boolean", "never", "number", "string", "unknown"] } } }
        ], [
            "@types/node/globals:NodeJS.CallSite",
            { type: "broken", file: "/types/external_types", node: "export type MyFn = NodeJS.CallSite", message: "Can only process index and property signatures, got something else instead: getThis(): unknown; (of kind MethodSignature)" }
        ], [
            "typescript/lib/lib.es5:Exclude",
            { type: "alias", body: { type: "conditional", checkType: { type: "generic_parameter", name: "T" }, extendsType: { type: "generic_parameter", name: "U" }, trueType: { type: "never" }, falseType: { type: "generic_parameter", name: "T" } }, typeParameters: [{ name: "T" }, { name: "U" }] }
        ], [
            "typescript/lib/lib.es5:Omit",
            { type: "alias", body: { type: "type_reference", name: "typescript/lib/lib.es5:Pick", typeArguments: [{ type: "generic_parameter", name: "T" }, { type: "type_reference", name: "typescript/lib/lib.es5:Exclude", typeArguments: [{ type: "keyof", target: { type: "generic_parameter", name: "T" } }, { type: "generic_parameter", name: "K" }] }] }, typeParameters: [{ name: "T" }, { name: "K" }] }
        ], [
            "typescript/lib/lib.es5:Pick",
            { type: "alias", body: { type: "mapped_type", keyName: "P", keyType: { type: "generic_parameter", name: "K" }, valueType: { type: "index_access", index: { type: "generic_parameter", name: "P" }, object: { type: "generic_parameter", name: "T" } } }, typeParameters: [{ name: "T" }, { name: "K" }] }
        ]]);
}
