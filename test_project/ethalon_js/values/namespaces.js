function (exports, require, __RuntyperAutogeneratedImport) {
    var NestedA;
    (function (NestedA) {
        let NestedB;
        (function (NestedB) {
            let NestedC;
            (function (NestedC) {
                let NestedD;
                (function (NestedD) {
                    NestedD.veryNestedVar = (x) => console.log(x);
                    function veryNestedFn(x) {
                        console.log(x);
                    }
                    NestedD.veryNestedFn = veryNestedFn;
                    typeof NestedD.veryNestedFn === "function" && __RuntyperAutogeneratedImport.functionsByName.set("/values/namespaces:NestedA.NestedB.NestedC.NestedD.veryNestedFn", NestedD.veryNestedFn);
                    typeof NestedD.veryNestedVar === "function" && __RuntyperAutogeneratedImport.functionsByName.set("/values/namespaces:NestedA.NestedB.NestedC.NestedD.veryNestedVar", NestedD.veryNestedVar);
                })(NestedD = NestedC.NestedD || (NestedC.NestedD = {}));
            })(NestedC = NestedB.NestedC || (NestedB.NestedC = {}));
        })(NestedB = NestedA.NestedB || (NestedA.NestedB = {}));
    })(NestedA = exports.NestedA || (exports.NestedA = {}));
    __RuntyperAutogeneratedImport.valueTypes.set("/values/namespaces:NestedA.NestedB.NestedC.NestedD.veryNestedFn", { type: "function", signatures: [{ type: "call_signature", parameters: [{ type: "parameter", name: "x", valueType: { type: "string" } }], returnType: { type: "constant", value: void 0 }, hasImplementation: true }] });
    __RuntyperAutogeneratedImport.valueTypes.set("/values/namespaces:NestedA.NestedB.NestedC.NestedD.veryNestedVar", { type: "call_signature", parameters: [{ type: "parameter", name: "x", valueType: { type: "number" } }], returnType: { type: "constant", value: void 0 } });
}
